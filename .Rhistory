bookdown::render_book("00index.Rmd", "bookdown::gitbook")
files <- list.files(pattern = "[.]rmd$")
for (f in files) rmarkdown::render(f)
files
list.files(pattern = "[.]rmd$")
list.files(pattern = "[.]Rmd")
files <- list.files(pattern = "[.]Rmd")
for (f in files) rmarkdown::render(f)
pacientes <- read_xlsx('./data/dados_raw.xlsx')
head(pacientes)
setwd('../')
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
library(readxl)
library(dplyr)
library(stringr)
library(geosphere)
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
head(medicos)
write.table(medicos, 'medicos.csv', sep=',', row.names = F)
pacientes <- read_xlsx('./data/dados_raw.xlsx')
head(pacientes)
dist <- numeric(length(pacientes$Medico))
head(pacientes)
# distribuição da distância
hist_boxplot(pacientes$dist)
# gráfico de histograma com boxplot
hist_boxplot <- function(var) {
g1 <- ggplot(pacientes, aes(var)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(var))
g2 <- ggplot(pacientes, aes(var)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal() + xlim(range(var))
grid.arrange(g1,g2, ncol=1)
}
# distribuição da idade
hist_boxplot(pacientes$Idade)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(leaflet)
library(corrplot)
library(leaflet)
pacientes <- read.table('./data/pacientes.csv', sep=',', h=T)
head(pacientes)
summary(pacientes$Longitude)
summary(pacientes$Latitude)
# medidas para a idade
pacientes %>% group_by(Medico) %>%
summarise(min = min(Idade),
media = mean(Idade),
mediana = median(Idade),
max = max(Idade),
variância = var(Idade)
)
# medidas para a distância
pacientes %>% group_by(Medico) %>%
summarise(min = min(dist),
media = mean(dist),
mediana = median(dist),
max = max(dist),
variância = var(dist)
)
fill_color <- 'royalblue'
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
g_freq_med
source('../01analise_descritiva.R')
source('01analise_descritiva.R')
# gráfico de boxplot de acordo com o médico
boxplot_idade <- function(var) {
ggplot(pacientes, aes(x=Medico, y=var)) + geom_boxplot(fill= fill_color) +
theme_minimal()
}
# boxplot para a idade de acordo com o médico
boxplot_idade(pacientes$Idade)
source('01analise_functions.R')
source('01analise_functions.R')
library(shiny)
pacientes[,'Idade']
source('./01analise_functions.R')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
source('./01analise_functions.R')
head(pacientes)
summary(pacientes$Idade)
hist(pacientes$Idade)
head(pacientes) %>% knitr(align='c', booktabs=T)
library(knitr)
library(knitr)
head(pacientes) %>% knitr(align='c', booktabs=T)
head(pacientes) %>% kable(align='c', booktabs=T)
pacientes$dist <- round(dist / 1000)
pacientes
pacientes$dist
pacientes$dist <- round(dist / 1000, 3)
pacientes$dist
dist / 1000
pacientes <- read_xlsx('./data/dados_raw.xlsx')
head(pacientes)
# distância
dist <- numeric(length(pacientes$Medico))
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
dist[i] <- distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
}
pacientes$dist <- round(dist / 1000, 3)
library(readxl)
library(dplyr)
library(stringr)
library(geosphere)
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
head(medicos)
write.table(medicos, ',/data/medicos.csv', sep=',', row.names = F)
pacientes <- read_xlsx('./data/dados_raw.xlsx')
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
head(medicos)
write.table(medicos, ',/data/medicos.csv', sep=',', row.names = F)
write.table(medicos, './data/medicos.csv', sep=',', row.names = F)
pacientes <- read_xlsx('./data/dados_raw.xlsx')
head(pacientes)
# distância
dist <- numeric(length(pacientes$Medico))
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
dist[i] <- distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
}
pacientes$dist <- round(dist / 1000, 3)
pacientes$dist
pacientes$Categoria[pacientes$Idade < 40] = "menor que 40"
pacientes
pacientes$Categoria
summary(pacientes$Idade)
<<<<<<< HEAD
getwd()
=======
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
library(readxl)
library(dplyr)
library(stringr)
library(geosphere)
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
head(medicos)
write.table(medicos, './data/medicos.csv', sep=',', row.names = F)
pacientes <- read_xlsx('./data/dados_raw.xlsx')
head(pacientes)
# distância
dist <- numeric(length(pacientes$Medico))
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
dist[i] <- distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
}
pacientes$dist <- round(dist / 1000, 3)
summary(pacientes$Idade)
case_when(
pacientes$Idade < 40 ~ '0 a 14'
)
case_when(
pacientes$Idade <= 14 ~ '0 a 14',
pacientes$Idade <= 24 ~ '15 a 24',
pacientes$Idade < 14 ~ '25 a 64',
TRUE ~ 'acima de 60'
)
case_when(
pacientes$Idade <= 14 ~ '0 a 14',
pacientes$Idade <= 24 ~ '15 a 24',
pacientes$Idade <= 65 ~ '25 a 64',
TRUE ~ 'acima de 60'
)
case_when(
pacientes$Idade <= 14 ~ '0 a 14',
pacientes$Idade <= 24 ~ '15 a 24',
pacientes$Idade <= 65 ~ '25 a 64',
TRUE ~ 'acima de 60'
)
case_when(
TRUE ~ 'acima de 60',
pacientes$Idade <= 65 ~ '25 a 64',
pacientes$Idade <= 24 ~ '15 a 24',
pacientes$Idade <= 14 ~ '0 a 14'
)
case_when(
pacientes$Idade <= 14 ~ '0 a 14',
pacientes$Idade <= 24 ~ '15 a 24',
pacientes$Idade <= 65 ~ '25 a 64',
TRUE ~ 'acima de 60'
)
summary(pacientes$Idade)
case_when(
pacientes$Idade <= 20 ~ 'menor que 20',
pacientes$Idade <= 40 ~ '20 a 40',
pacientes$Idade <= 60 ~ '40 a 60',
TRUE ~ 'acima de 60'
)
pacientes$categoria <- case_when(
pacientes$Idade <= 20 ~ 'menor que 20',
pacientes$Idade <= 40 ~ '20 a 40',
pacientes$Idade <= 60 ~ '40 a 60',
TRUE ~ 'acima de 60'
)
library(readxl)
library(dplyr)
library(stringr)
library(geosphere)
##### médicos #####
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
head(medicos)
write.table(medicos, './data/medicos.csv', sep=',', row.names = F)
##### pacientes #####
pacientes <- read_xlsx('./data/dados_raw.xlsx')
head(pacientes)
# distância
dist <- numeric(length(pacientes$Medico))
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
dist[i] <- distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
}
pacientes$dist <- round(dist / 1000, 3)
# categorizando idade
pacientes$categoria <- case_when(
pacientes$Idade <= 20 ~ 'menor que 20',
pacientes$Idade <= 40 ~ '20 a 40',
pacientes$Idade <= 60 ~ '40 a 60',
TRUE ~ 'acima de 60'
)
write.table(pacientes, './data/pacientes.csv', sep=',', row.names = F)
head(pacientes) %>% kable(align='c', booktabs=T)
library(shiny)
library(shiny)
library(knitr)
head(pacientes) %>% kable(align='c', booktabs=T)
install.packages('rmdformats ')
install.packages('rmdformats')
pacientes
pacientes %>% filter(dist < 50)
pacientes %>% filter(dist < 50)
pacientes
pacientes %>% filter(dist > 50)
pacientes %>% filter(dist > 50) %>% kable(align='c', booktabs=T)
cor(pacientes[,4:5])
cor(pacientes[,4:5])
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot()
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed()
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(lower = T)
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(lower = F)
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(lower = F)
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed()
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
library(corrplot)
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot()
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE', col='black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE', addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed( addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot(addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
corrplot(order="AOE', addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(order="AOE", addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(order="AOE", addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')])
# função para fazer tabelas
make_table <- function(table, align='c', booktabs=T){
kable(table, align = 'c', booktabs=T)
}
# função para fazer tabelas
make_table <- function(table, align='c', booktabs=T){
kable(table, align = align, booktabs=booktabs)
}
cor(pacientes[,c('Idade', 'dist')]) %>% make_table()
head(pacientes) %>% make_table()
cor(pacientes[,c('Idade', 'dist')]) %>% make_table()
table(pacientes$Medico, pacientes$categoria)
table(pacientes$Medico, pacientes$categoria) %>% prop.table()
%>% round(,2)
%>% round(2)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table() %>% round(2)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table() %>% round(3)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3) %>% make_table()
tabela_medicos <- table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3)
tabela_medicos %>% make_table()
chisq.test(tabela_medicos)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3) %>% make_table()
base <- table(pacientes$Medico, pacientes$categoria)
base
tab <- base %>% make_table()
tab
tab
base <- table(pacientes$Medico, pacientes$categoria)
tab
base <- table(pacientes$Medico, pacientes$categoria)
base
tab %>% as.data.frame()
base <- table(pacientes$Medico, pacientes$categoria)
tab <- base
tab %>% as.data.frame()
tab %>% as.data.frame.array()
head(pacientes)
plot(pacientes$dist, pacientes$Idade)
pacientes <- pacientes %>% filter(dist < 50)
pacientes <- pacientes %>% filter(dist < 50)
pacientes$dist
pacientes$dist %>% summary()
plot(pacientes$dist, pacientes$Idade)
lm(pacientes$dist ~ pacientes$Idade)
lm(pacientes$dist ~ pacientes$Idade) %<% summary()
lm(pacientes$dist ~ pacientes$Idade) %>% summary()
lm(pacientes$dist ~ pacientes$Idade) %>% plot()
kmeans(pacientes)
kmeans(pacientes, centers=2)
>>>>>>> 46f0cf12fec1d06ce400ad867433bc19a9eeecbb
