library(readxl)
medicos <- read_xlsx('dados_raw.xlsx', h=T)
library(readxl)
medicos <- read_xlsx('dados_raw.xlsx')
head(medicos)
medicos <- read_xlsx('dados_raw.xlsx', sheet = 2)
head(medicos)
library(readxl)
medicos <- read_xlsx('dados_raw.xlsx', sheet = 2)
head(medicos)
write.table(medicos, 'medicos.csv', sep=',')
write.table(medicos, 'medicos.csv', sep=',', row.names = F)
write.table(medicos, 'medicos.csv', sep=',', row.names = F)
pacientes <- read_xlsx('dados_raw.xlsx')
head(pacientes)
medicos <- read_xlsx('dados_raw.xlsx', sheet = 2)
head(medicos)
medicos$Local
split(medicos$Local, sep=' ')
join(medicos$Local, sep=' ')
library(stringr)
str_split(medicos$Local, ' ')
library(dplyr)
print(x[2])
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
print(x[2])
})
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
})
medicos <- read_xlsx('dados_raw.xlsx', sheet = 2)
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
head(medicos)
write.table(medicos, 'medicos.csv', sep=',', row.names = F)
pacientes <- read_xlsx('dados_raw.xlsx')
head(pacientes)
install.packages('geosphere')
library(geosphere)
pacientes[1,]
pacientes[1,1:2]
b <- medicos
medicos
a <- pacientes[1,1:2]
b <- medicos[1,2:3]
distHaversine(a,b)
a
b
distCosine(a,b)
distHaversine(a,b)
a
as.vector(a)
a[1]
distHaversine(a,b)
pacientes <- read_xlsx('dados_raw.xlsx')
switch (pacientes$Medico,
"A" = return('j'),
"B" = return('aa')
)
result = switch(pacientes$Medico,
"A" = return('j'),
"B" = return('aa')
)
result = switch(pacientes$Medico,
"A" = 'j',
"B" = 'aa'
)
result = switch(pacientes$Medico,
"A" = 1,
"B" = 2
)
switch (pacientes$Medico,
"A" = cat('teste', 3),
"B" = 23
)
switch (pacientes$Medico,
cat('teste', 3),
23
)
?switch
pacientes$Medico
pacientes$Medico %>%
sapply(function(x) {
switch (x,
"A" = cat('teste', 3),
"B" = 23
)
})
pacientes %>%
sapply(function(x) {
switch (x$Medico,
"A" = c(x$Longitude, x$Latitude),
"B" = c(x$Longitude, x$Latitude)
)
})
pacientes %>%
aapply(1,function(x) {
switch (x$Medico,
"A" = c(x$Longitude, x$Latitude),
"B" = c(x$Longitude, x$Latitude)
)
})
pacientes %>%
apply(1,function(x) {
switch (x$Medico,
"A" = c(x$Longitude, x$Latitude),
"B" = c(x$Longitude, x$Latitude)
)
})
pacientes %>%
apply(1,function(x) {
switch (x$Medico,
"A" = c(x$Longitude, x$Latitude),
"B" = c(x$Longitude, x$Latitude)
)
})
pacientes %>%
apply(2,function(x) {
switch (x$Medico,
"A" = c(x$Longitude, x$Latitude),
"B" = c(x$Longitude, x$Latitude)
)
})
pacientes %>%
tapply(1,function(x) {
switch (x$Medico,
"A" = c(x$Longitude, x$Latitude),
"B" = c(x$Longitude, x$Latitude)
)
})
ifelse(pacientes$Medico == 'A', pacientes$Longitude, 0)
medicos[1,2:3]
t <- LETTERS[1:7]
t
grep(t, 'A')
grep('A', t)
grep('D', t)
head(pacientes)
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
}
medicos
dist <- numeric(pacientes$Medico)
dist <- numeric(length(pacientes$Medico))
dist
dist <- numeric(length(pacientes$Medico))
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
aux <- c(2,1)
dist[i] <- distHaversine(pacientes[i,aux], medicos[ind, aux])
}
dist
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
aux <- c(2,1)
distHaversine(pacientes[i,aux], medicos[ind, aux])
}
i <- 1
aux <- c(2,1)
pacientes[i,aux]
medicos[ind, aux]
medicos
i <- 1
distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
dist <- numeric(length(pacientes$Medico))
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
}
dist
dist <- numeric(length(pacientes$Medico))
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
dist[i] <- distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
}
dist
pacientes$dist <- dist
write.table(pacientes, 'pacientes.csv', sep=',', row.names = F)
pacientes$dist <- dist / 1000
write.table(pacientes, 'pacientes.csv', sep=',', row.names = F)
library(ggplot2)
library(dplyr)
dados <- read.table('pacientes.csv', sep=',', h=T)
head(dados)
pacientes <- read.table('pacientes.csv', sep=',', h=T)
head(pacientes)
barplot(table(pacientes$Medico))
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar()
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar() + theme_minimal()
cor <- 'royalblue'
fill_color <- 'royalblue'
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
library(gridExtra)
# distribuição da idade
g1 <- ggplot(pacientes, aes(Idade)) + geom_histogram(fill=fill_color)
g1
# distribuição da idade
g1 <- ggplot(pacientes, aes(Idade)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal()
# distribuição da idade
g1 <- ggplot(pacientes, aes(Idade)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal()
g1
g2 <- ggplot(pacientes, aes(Idade)) + geom_boxplot() +
theme_minimal()
g2
g2 <- ggplot(pacientes, aes(Idade)) + geom_boxplot(fill=fill_color, color='white') +
theme_minimal()
g2
g2 <- ggplot(pacientes, aes(Idade)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal()
g2
g1
grid.arrange(g1,g2, ncol=2)
grid.arrange(g1,g2, ncol=1)
# distribuição da idade
g1 <- ggplot(pacientes, aes(Idade)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(0,100)
g1
range(pacientes$Idade)
# distribuição da idade
g1 <- ggplot(pacientes, aes(Idade)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(pacientes$Idade))
g1
# distribuição da idade
g1 <- ggplot(pacientes, aes(Idade)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(pacientes$Idade))
g2 <- ggplot(pacientes, aes(Idade)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal() + xlim(range(pacientes$Idade))
grid.arrange(g1,g2, ncol=1)
# distribuição da idade
g1 <- ggplot(pacientes, aes(Idade)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(10,90)
g2 <- ggplot(pacientes, aes(Idade)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal() + xlim(10,90)
grid.arrange(g1,g2, ncol=1)
g1 <- ggplot(pacientes, aes(var)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(pacientes$var))
# gráfico de histograma com boxplot
hist_boxplot <- function(var) {
g1 <- ggplot(pacientes, aes(var)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(pacientes$var))
g2 <- ggplot(pacientes, aes(var)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal() + xlim(range(pacientes$var))
grid.arrange(g1,g2, ncol=1)
}
# distribuição da idade
hist_boxplot(Idade)
# distribuição da idade
hist_boxplot('Idade')
# gráfico de histograma com boxplot
hist_boxplot <- function(var) {
g1 <- ggplot(pacientes, aes(var)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(var))
g2 <- ggplot(pacientes, aes(var)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal() + xlim(range(var))
grid.arrange(g1,g2, ncol=1)
}
# distribuição da idade
hist_boxplot(dados$Idade)
# distribuição da distância
hist_boxplot(dados$dist)
# distribuição da distância
hist_boxplot(dados$dist)
summary(pacientes$Longitude)
summary(pacientes$Latitude)
# distribuição da idade
hist_boxplot(pacientes$Idade)
# distribuição da distância
hist_boxplot(pacientes$Idade)
# distribuição da distância
hist_boxplot(pacientes$dist)
stats::dist(pacientes[i,c(2,1)], medicos[ind, c(3,2)], method = "euclidean")
?dist
library(corrplot)
pacientes
cor(pacientes[,4:5])
plot(pacientes[,4:5])
# gráfico de boxplot de acordo com o médico
hist_boxplot <- function(var) {
ggplot(pacientes, aes(y=var, group=Idade)) + geom_histogram() +
theme_minimal()
}
# gráfico de boxplot de acordo com o médico
boxplot_idade <- function(var) {
ggplot(pacientes, aes(y=var, group=Idade)) + geom_histogram() +
theme_minimal()
}
# boxplot para a idade de acordo com o médico
boxplot_idade(pacientes$Idade)
# gráfico de boxplot de acordo com o médico
boxplot_idade <- function(var) {
ggplot(pacientes, aes(y=var, group=Idade)) + geom_boxplot() +
theme_minimal()
}
# boxplot para a idade de acordo com o médico
boxplot_idade(pacientes$Idade)
# gráfico de boxplot de acordo com o médico
boxplot_idade <- function(var) {
ggplot(pacientes, aes(y=var, group=Medico)) + geom_boxplot() +
theme_minimal()
}
# boxplot para a idade de acordo com o médico
boxplot_idade(pacientes$Idade)
# gráfico de boxplot de acordo com o médico
boxplot_idade <- function(var) {
ggplot(pacientes, aes(x=Medico, y=var)) + geom_boxplot() +
theme_minimal()
}
# boxplot para a idade de acordo com o médico
boxplot_idade(pacientes$Idade)
# gráfico de boxplot de acordo com o médico
boxplot_idade <- function(var) {
ggplot(pacientes, aes(x=Medico, y=var)) + geom_boxplot(fill= fill_color) +
theme_minimal()
}
# boxplot para a idade de acordo com o médico
boxplot_idade(pacientes$Idade)
# boxplot para a distância de acordo com o médico
boxplot_idade(pacientes$dist)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
pacientes %>% group_by(Medico)
pacientes %>% group_by(Medico) %>%
summarise()
pacientes %>% group_by(Medico) %>%
summarise(media = mean)
pacientes %>%
summarise(media_idade = mean(Idade))
pacientes %>% group_by(Medico) %>%
summarise(media_idade = mean(Idade))
pacientes %>% group_by(Medico) %>%
summarise(media_idade = mean(Idade),
var_idade = var(Idade),
media_dist = mean(dist),
var_dist = var(dist), )
summary(pacientes$Idade ~ pacientes$Medico)
summary(pacientes$Idade, pacientes$Medico)
summary(pacientes$Idade*pacientes$Medico)
# função para medidas principais de acordo com o médico
medidas_principais <- function(x){
pacientes %>% group_by(Medico) %>%
summarise(min = min(x),
media = mean(x),
mediana = median(x),
max = max(x),
variância = var(x)
)
}
source('C:/Users/Samuel/Desktop/UEM/EAD - 2021/segundo_semestre/laboratório/lab-trabalho1/01analise_descritiva.R', echo=TRUE)
# medidas para a idade
medidas_principais(Idade)
# função para medidas principais de acordo com o médico
medidas_principais <- function(x){
pacientes %>% group_by(Medico) %>%
summarise(min = min(x),
media = mean(x),
mediana = median(x),
max = max(x),
variância = var(x)
)
}
# medidas para a idade
medidas_principais('Idade')
# medidas para a idade
medidas_principais(pacientes$Idade)
# medidas para a idade
pacientes %>% group_by(Medico) %>% medidas_principais(Idade)
# medidas para a idade
pacientes %>% group_by(Medico) %>% medidas_principais('Idade')
# medidas para a idade
pacientes %>% group_by(Medico) %>% medidas_principais()
pacientes %>% group_by(Medico)
# medidas para a idade
pacientes %>% group_by(Medico) %>% medidas_principais(dist)
pacientes %>% group_by(Medico) %>%
summarise(min = min(var),
media = mean(var),
mediana = median(var),
max = max(var),
variância = var(var)
)
var <- "Idade"
pacientes %>% group_by(Medico) %>%
summarise(min = min(var),
media = mean(var),
mediana = median(var),
max = max(var),
variância = var(var)
)
var <- Idade
pacientes %>% group_by(Medico) %>%
summarise(min = min(var),
media = mean(var),
mediana = median(var),
max = max(var),
variância = var(var)
)
pacientes %>% group_by(Medico) %>%
summarise(min = min(var),
media = mean(var),
mediana = median(var),
max = max(var),
variância = var(var)
)
var <- Idade
# medidas para a idade
pacientes %>% group_by(Medico) %>%
summarise(min = min(Idade),
media = mean(Idade),
mediana = median(Idade),
max = max(Idade),
variância = var(Idade)
)
# medidas para a distância
pacientes %>% group_by(Medico) %>%
summarise(min = min(dist),
media = mean(dist),
mediana = median(dist),
max = max(dist),
variância = var(dist)
)
