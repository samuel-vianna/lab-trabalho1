"E","D","B","A","C")
matriz
tratamento<-c(matriz)
dados.QL1 <- data.frame('TempodeReacao' = TempodeReacao, 'Linha' = Linha,
'Coluna'= Coluna, 'Tratamento' = Tratamento)
Coluna
Coluna<-as.factor(rep(1:5,5))
Coluna
matriz<-c("A","B","D","C","E",
"C","E","A","D","B",
"B","A","C","E","D",
"D","C","E","B","A",
"E","D","B","A","C")
Linha<-as.factor(sort(rep(1:5,5)))
Linha
Coluna<-as.factor(rep(1:5,5))
Coluna
matriz<-c("A","B","D","C","E",
"C","E","A","D","B",
"B","A","C","E","D",
"D","C","E","B","A",
"E","D","B","A","C")
matriz
tratamento<-c(matriz)
dados.QL1 <- data.frame('TempodeReacao' = TempodeReacao, 'Linha' = Linha,
'Coluna'= Coluna, 'Tratamento' = Tratamento)
Tratamento<-c(matriz)
dados.QL1 <- data.frame('TempodeReacao' = TempodeReacao, 'Linha' = Linha,
'Coluna'= Coluna, 'Tratamento' = Tratamento)
library(ggplot2)
ggplot(data = dados.QL2,
mapping = aes(x = Tratamento,
y = Taxadequeima)) +
geom_point(size=4) +
stat_summary(mapping = aes(group = 1),
geom = "line",
cex=1,
fun = "mean")
library(ggplot2)
ggplot(data = dados.QL1,
mapping = aes(x = Tratamento,
y = TempodeReacao)) +
geom_point(size=4) +
stat_summary(mapping = aes(group = 1),
geom = "line",
cex=1,
fun = "mean")
TempodeReacao <- c(8,  7, 1,  7, 3,
11, 2, 7,  3, 8,
4,  9, 10, 1, 5,
6,  8, 6,  6, 10,
4,  2, 3,  8, 8)
Lote<-as.factor(sort(rep(1:5,5)))
dia<-as.factor(rep(1:5,5))
matriz<-c("A","B","D","C","E",
"C","E","A","D","B",
"B","A","C","E","D",
"D","C","E","B","A",
"E","D","B","A","C")
Tratamento<-c(matriz)
dados.QL1 <- data.frame('TempodeReacao' = TempodeReacao, 'Lote' = Lote,
'dia'= dia, 'Tratamento' = Tratamento)
ggplot(data = dados.QL1,
mapping = aes(x = Lote,
y = TempodeReacao)) +
geom_point(size=4) +
stat_summary(mapping = aes(group = 1),
geom = "line",
cex=1,
fun = "mean")
ggplot(data = dados.QL1,
mapping = aes(x = dia,
y = TempodeReacao)) +
geom_point(size=4) +
stat_summary(mapping = aes(group = 1),
geom = "line",
cex=1,
fun = "mean")
modelo <- aov(TempodeReacao ~ Tratamento + Lote + dia)
summary(modelo)
modelo <- aov(TempodeReacao ~ Tratamento + Lote + dia)
summary(modelo)
tukey_teste <- HSD.test(modelo,"Tratamento",console = TRUE,group = TRUE)
library(agricolae)
tukey_teste <- HSD.test(modelo,"Tratamento",console = TRUE,group = TRUE)
tukey_teste <- HSD.test(modelo,"Tratamento",console = TRUE,group = FALSE)
dat<-c(15.8 , 14.8 , 14.6 , 16.6 , 15.9 , 13.1 , 15.2 , 17.4 , 14.2 , 15.9,15.9 , 16.1 , 13.8 , 16.0 , 16.5 , 17.8)
order(dat)
sort(dat,decreasing = T)
sort(dat)
library(readxl)
library(dplyr)
library(stringr)
library(geosphere)
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
head(medicos)
write.table(medicos, './data/medicos.csv', sep=',', row.names = F)
pacientes <- read_xlsx('./data/dados_raw.xlsx')
head(pacientes)
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
dist[i] <- distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
}
pacientes$dist <- round(dist / 1000, 3)
write.table(pacientes, './data/pacientes.csv', sep=',', row.names = F)
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
# distância
dist <- numeric(length(pacientes$Medico))
pacientes$categoria <- case_when(
pacientes$Idade <= 20 ~ 'menor que 20',
pacientes$Idade <= 40 ~ '20 a 40',
pacientes$Idade <= 60 ~ '40 a 60',
TRUE ~ 'acima de 60'
)
library(readxl)
library(dplyr)
library(stringr)
library(geosphere)
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
medicos <- read_xlsx('.//data//dados_raw.xlsx', sheet = 2)
medicos <- read_xlsx('data//dados_raw.xlsx', sheet = 2)
medicos <- read_xlsx('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\dados_raw.xlsx', sheet = 2)
str_split(medicos$Local, ' ') %>%
sapply(function(x) {
return(x[2])
}) -> medicos$Local
head(medicos)
write.table(medicos, './data/medicos.csv', sep=',', row.names = F)
write.table(medicos, 'C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\medicos.csv', sep=',', row.names = F)
pacientes <- read_xlsx('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\dados_raw.xlsx')
head(pacientes)
# distância
dist <- numeric(length(pacientes$Medico))
for(i in seq_along(pacientes$Medico)){
ind <- grep(pacientes[i,3], LETTERS[1:7])
dist[i] <- distHaversine(pacientes[i,c(2,1)], medicos[ind, c(3,2)])
}
pacientes$dist <- round(dist / 1000, 3)
pacientes$categoria <- case_when(
pacientes$Idade <= 20 ~ 'menor que 20',
pacientes$Idade <= 40 ~ '20 a 40',
pacientes$Idade <= 60 ~ '40 a 60',
TRUE ~ 'acima de 60'
)
write.table(pacientes, 'C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\pacientes.csv', sep=',', row.names = F)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(leaflet)
library(corrplot)
library(leaflet)
pacientes <- read.table('./data/pacientes.csv', sep=',', h=T)
head(pacientes)
summary(pacientes$Longitude)
summary(pacientes$Latitude)
# medidas para a idade
pacientes %>% group_by(Medico) %>%
summarise(min = min(Idade),
media = mean(Idade),
mediana = median(Idade),
max = max(Idade),
variância = var(Idade)
)
# medidas para a distância
pacientes %>% group_by(Medico) %>%
summarise(min = min(dist),
media = mean(dist),
mediana = median(dist),
max = max(dist),
variância = var(dist)
)
fill_color <- 'royalblue'
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
# distribuição da idade
hist_boxplot(pacientes$Idade)
# gráfico de histograma com boxplot
hist_boxplot <- function(var) {
g1 <- ggplot(pacientes, aes(var)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(var))
g2 <- ggplot(pacientes, aes(var)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal() + xlim(range(var))
grid.arrange(g1,g2, ncol=1)
}
# distribuição da distância
hist_boxplot(pacientes$dist)
# gráfico de boxplot de acordo com o médico
boxplot_idade <- function(var) {
ggplot(pacientes, aes(x=Medico, y=var)) + geom_boxplot(fill= fill_color) +
theme_minimal()
}
# boxplot para a idade de acordo com o médico
boxplot_idade(pacientes$Idade)
# boxplot para a distância de acordo com o médico
boxplot_idade(pacientes$dist)
# correlação
plot(pacientes[,4:5])
cor(pacientes[,4:5])
id<-c(1:2042)
pacientes<-data.frame(pacientes,id)
cof <- colorFactor(c("red", "blue", "orange",'black',"green","pink","purple"), domain=c("A", "B", "C","D","E","F","G"))
medicos$Local <- factor(medicos$Local)
new <- c("red3","blue","orange","black","green","pink","purple")[medicos$Local]
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'white',
library = 'ion',
markerColor = new
)
m <- leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(Medico), stroke = F, fillOpacity = 0.9)  %>%
addLegend("bottomright", colors= c("red", "blue", "orange","black","green","pink","purple"), labels=c("A'", "B", "C","D","E","F","G"), title="Medico")%>%
addAwesomeMarkers(lng = ~medicos$Longitude, lat=~medicos$Latitude, icon=icons,
popup = ~medicos$Local)
m
pacientes$Categoria[pacientes$Idade < 40] = "menor que 40"
pacientes$Categoria[pacientes$Idade >= 40 & pacientes$Idade < 60] = "40 a 60"
pacientes$Categoria[pacientes$Idade >= 60] = "maior que 60"
#grafico idade
barplot(table(pacientes$Categoria))
# mapa por idade
cof <- colorFactor(c("red", "blue", "orange"), domain=c("menor que 40","40 a 60","maior que 60"))
m <- leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(pacientes$Categoria), stroke = F, fillOpacity = 0.9)  %>%
addLegend("bottomright", colors= c("red", "blue", "orange"), labels=c("Entre 40 anos e 60 anos","Maior que 60 anos","Menor que 40 anos"), title="Idade")
m
# Fazendo estudo dos medicos um a um pela idade
dadosa<-filter(pacientes, Medico == "A")
dadosb<-filter(pacientes, Medico == "B")
dadosc<-filter(pacientes, Medico =="C")
dadosd<-filter(pacientes, Medico =="D")
dadose<-filter(pacientes, Medico == "E")
dadosf<-filter(pacientes, Medico == "F")
dadosg<-filter(pacientes, Medico == "G")
#grafico idade do medico a
barplot(table(dadosa$Categoria))
#grafico idade do medico b
barplot(table(dadosb$Categoria))
#grafico idade do medico c
barplot(table(dadosc$Categoria))
#grafico idade do medico d
barplot(table(dadosd$Categoria))
#grafico idade do medico e
barplot(table(dadose$Categoria))
#grafico idade do medico f
barplot(table(dadosf$Categoria))
#grafico idade do medico g
barplot(table(dadosg$Categoria))
library(ggplot2)
library(gridExtra)
library(dplyr)
library(leaflet)
library(corrplot)
library(leaflet)
pacientes <- read.table('./data/pacientes.csv', sep=',', h=T)
fill_color <- 'royalblue'
# gráfico de histograma com boxplot
hist_boxplot <- function(var) {
g1 <- ggplot(pacientes, aes(var)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(var))
g2 <- ggplot(pacientes, aes(var)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal() + xlim(range(var))
grid.arrange(g1,g2, ncol=1)
}
# gráfico de boxplot de acordo com o médico
boxplot_medico <- function(var) {
ggplot(pacientes, aes(x=Medico, y=var)) + geom_boxplot(fill= fill_color) +
theme_minimal()
}
ggplot(dadosa$Categoria)+
geom_bar(fill_color)+
ggplot(dadosa$Categoria)+
geom_bar(fill_color)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(leaflet)
library(corrplot)
library(leaflet)
pacientes <- read.table('./data/pacientes.csv', sep=',', h=T)
head(pacientes)
pacientes <- read.table('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\pacientes.csv', sep=',', h=T)
head(pacientes)
summary(pacientes$Longitude)
summary(pacientes$Latitude)
# medidas para a idade
pacientes %>% group_by(Medico) %>%
summarise(min = min(Idade),
media = mean(Idade),
mediana = median(Idade),
max = max(Idade),
variância = var(Idade)
)
# medidas para a distância
pacientes %>% group_by(Medico) %>%
summarise(min = min(dist),
media = mean(dist),
mediana = median(dist),
max = max(dist),
variância = var(dist)
)
fill_color <- 'royalblue'
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
# gráfico de histograma com boxplot
hist_boxplot <- function(var) {
g1 <- ggplot(pacientes, aes(var)) + geom_histogram(fill=fill_color, color='white') +
theme_minimal() + xlim(range(var))
g2 <- ggplot(pacientes, aes(var)) + geom_boxplot(fill=fill_color, color='black') +
theme_minimal() + xlim(range(var))
grid.arrange(g1,g2, ncol=1)
}
# distribuição da idade
hist_boxplot(pacientes$Idade)
# distribuição da distância
hist_boxplot(pacientes$dist)
# gráfico de boxplot de acordo com o médico
boxplot_idade <- function(var) {
ggplot(pacientes, aes(x=Medico, y=var)) + geom_boxplot(fill= fill_color) +
theme_minimal()
}
# boxplot para a idade de acordo com o médico
boxplot_idade(pacientes$Idade)
# boxplot para a distância de acordo com o médico
boxplot_idade(pacientes$dist)
# correlação
plot(pacientes[,4:5])
cor(pacientes[,4:5])
id<-c(1:2042)
pacientes<-data.frame(pacientes,id)
cof <- colorFactor(c("red", "blue", "orange",'black',"green","pink","purple"), domain=c("A", "B", "C","D","E","F","G"))
medicos$Local <- factor(medicos$Local)
new <- c("red3","blue","orange","black","green","pink","purple")[medicos$Local]
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'white',
library = 'ion',
markerColor = new
)
m <- leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(Medico), stroke = F, fillOpacity = 0.9)  %>%
addLegend("bottomright", colors= c("red", "blue", "orange","black","green","pink","purple"), labels=c("A'", "B", "C","D","E","F","G"), title="Medico")%>%
addAwesomeMarkers(lng = ~medicos$Longitude, lat=~medicos$Latitude, icon=icons,
popup = ~medicos$Local)
m
pacientes$Categoria[pacientes$Idade < 40] = "menor que 40"
pacientes$Categoria[pacientes$Idade >= 40 & pacientes$Idade < 60] = "40 a 60"
pacientes$Categoria[pacientes$Idade >= 60] = "maior que 60"
#grafico idade
barplot(table(pacientes$Categoria))
# mapa por idade
cof <- colorFactor(c("red", "blue", "orange"), domain=c("menor que 40","40 a 60","maior que 60"))
m <- leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(pacientes$Categoria), stroke = F, fillOpacity = 0.9)  %>%
addLegend("bottomright", colors= c("red", "blue", "orange"), labels=c("Entre 40 anos e 60 anos","Maior que 60 anos","Menor que 40 anos"), title="Idade")
m
# Fazendo estudo dos medicos um a um pela idade
dadosa<-filter(pacientes, Medico == "A")
dadosb<-filter(pacientes, Medico == "B")
dadosc<-filter(pacientes, Medico =="C")
dadosd<-filter(pacientes, Medico =="D")
dadose<-filter(pacientes, Medico == "E")
dadosf<-filter(pacientes, Medico == "F")
dadosg<-filter(pacientes, Medico == "G")
#grafico idade do medico a
barplot(table(dadosa$Categoria))
#grafico idade do medico b
barplot(table(dadosb$Categoria))
#grafico idade do medico c
barplot(table(dadosc$Categoria))
#grafico idade do medico d
barplot(table(dadosd$Categoria))
#grafico idade do medico e
barplot(table(dadose$Categoria))
#grafico idade do medico f
barplot(table(dadosf$Categoria))
#grafico idade do medico g
barplot(table(dadosg$Categoria))
ggplot(dadosa$Categoria)+
geom_bar(fill_color)
ggplot(dadosa$Categoria)+
geom_bar(fill=fill_color)
ggplot(dadosa$Categoria)+
geom_bar(fill='royalblue')
ggplot(dadosa$Categoria)+
geom_bar(fill='royalblue')
ggplot(dadosa$Categoria)+
geom_bar()
View(dadosa)
ggplot(dadosa,aes(x=Categoria))+
geom_bar()
ggplot(dadosa,aes(x=Categoria))+
geom_bar(fill="royalblue")
ggplot(dadosa,aes(x=Categoria))+
geom_bar(fill="royalblue")+
labs(x="Categoria",
y="Frequencia")
# função para graficos mapa com medico
mapa_medico<-function(){
cof <- colorFactor(c("red", "blue", "orange",'black',"green","pink","purple"), domain=c("A", "B", "C","D","E","F","G"))
medicos$Local <- factor(medicos$Local)
new <- c("red3","blue","orange","black","green","pink","purple")[medicos$Local]
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'white',
library = 'ion',
markerColor = new
)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(Medico), stroke = F, fillOpacity = 0.9)  %>%
addLegend("bottomright", colors= c("red", "blue", "orange","black","green","pink","purple"), labels=c("A'", "B", "C","D","E","F","G"), title="Medico")%>%
addAwesomeMarkers(lng = ~medicos$Longitude, lat=~medicos$Latitude, icon=icons,
popup = ~medicos$Local)
}
mapa_medico()
# função para graficos mapa idade
mapa_idade<-function(){
cof <- colorFactor(c("red", "blue", "orange"), domain=c("menor que 40","40 a 60","maior que 60"))
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(pacientes$Categoria), stroke = F, fillOpacity = 0.9)  %>%
addLegend("bottomright", colors= c("red", "blue", "orange"), labels=c("Entre 40 anos e 60 anos","Maior que 60 anos","Menor que 40 anos"), title="Idade")
}
mapa_idade()
# grafico idade para categoria medico
idade_medico<-function(medico,dados){
dados<-filter(pacientes, Medico == medico)
ggplot(dados,aes(x=Categoria))+
geom_bar(fill="royalblue")+
labs(x="Categoria",
y="Frequencia")
}
# grafico idade para categoria medico
idade_medico<-function(medico){
dados<-filter(pacientes, Medico == medico)
ggplot(dados,aes(x=Categoria))+
geom_bar(fill="royalblue")+
labs(x="Categoria",
y="Frequencia")
}
idade_medico("A")
idade_medico("B")
idade_medico("c")
idade_medico("C")
install.packages("shiny")
install.packages("DT")
install.packages("shiny")
```{r, message=F, warning=F, echo=F}
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\01analise_functions.R')
source('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\01analise_functions.R')
<!-- ------------------------------------------------- -->
# Introdução
A fim de fixar os conhecimentos passados em sala de aula, foi passado um banco de dados com informações sobre atendimentos em pontos de saúde de Maringá.
source('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\01analise_functions.R')
source('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\01analise_functions.r')
source('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\01analise_functions.R')
DT::dataTableOutput('view_data')
output$view_data <- DT::renderDataTable({
pacientes
})
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\01analise_functions.R')
source('C:\\Users\\vitor\\Desktop\\lab-trabalho1\\data\\01analise_functions.R')
source('C:/Users/vitor/Desktop/lab-trabalho1/data/01analise_functions.R')
source("C:/Users/vitor/Desktop/lab-trabalho1/data/01analise_functions.R")
source("C:/Users/vitor/Desktop/lab-trabalho1/data/01analise_functions.R")
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source("C:/Users/vitor/Desktop/lab-trabalho1/data/01analise_functions.R")
setwd("C:/Users/vitor/Desktop/lab-trabalho1/data")
source("01analise_functions.R")
source("C:/Users/vitor/Desktop/lab-trabalho1/data/01analise_functions.R")
getwd()
source("C:/Users/vitor/Desktop/lab-trabalho1/01analise_functions.R")
getwd()
source("C:/Users/vitor/Desktop/lab-trabalho1/01analise_functions.R")
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source("C:/Users/vitor/Desktop/lab-trabalho1/01analise_functions.R")
